{"version":3,"sources":["../node_modules/@ionic/react/node_modules/@stencil/core/internal/client lazy /^/.//.*$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/@stencil/core/internal/client lazy /^/.//.*$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/@ionic/react/node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object","components/GameBoard.tsx","components/ScoreBoard.tsx","images/pikachu.png","images/charmander.png","images/snorlax.png","images/jigglypuff.png","images/squirtle.png","images/eevee.png","images/pokeball.png","pages/Game.tsx","pages/Profile.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackAsyncContext","__webpack_require__","o","ids","Object","GameBoard","board","dragStart","dragDrop","dragEnd","className","color","index","src","alt","draggable","onDragStart","onDragOver","preventDefault","onDragEnter","onDragLeave","onDrop","onDragEnd","ScoreBoard","score","myItemColors","squirtle","charmander","eevee","jigglypuff","snorlax","pikachu","myPanel","Game","useState","currentColorArray","setCurrentColorArray","squareBeingDragged","setSquareBeingDragged","squareBeingReplaced","setSquareBeingReplaced","setScore","checkColumOfFour","maxToCheckColum","i","columOfFour","selectedColor","every","square","forEach","pokeball","sc","localStorage","setItem","toString","checkRowOfFour","notValid","push","rowOfFour","includes","checkColumOfThree","columOfThree","checkRowOfThree","rowOfThree","moveIntoSquareBelow","firstRow","randomNumber","Math","floor","random","length","useEffect","randomColorArray","randomNumber0to5","randomColor","createPanel","Number","getItem","timer","setInterval","clearInterval","fullscreen","target","squareBeingDraggedId","parseInt","getAttribute","squareBeingReplacedId","validMove","isColumOfFour","booleanCheckColumOfFour","isRowOfFour","booleanCheckRowOfFour","isColumOfThree","booleanCheckColumOfThree","isRowOfThree","booleanCheckRowOfThree","NaN","fixed","size","href","title","Profile","setupIonicReact","App","exact","path","to","slot","tab","icon","gameController","personCircleOutline","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.83fd7df7.chunk.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 52;","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 53;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t83,\n\t\t12\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 54;\nmodule.exports = webpackAsyncContext;","import './GameBoard.css';\nimport { PanelBoardProps } from '../interfaces/interfaces';\nimport { IonImg } from '@ionic/react';\n\nconst GameBoard: React.FC<PanelBoardProps> = (\n  { board, \n    dragStart,\n    dragDrop,\n    dragEnd\n  }) => {\n    return (\n      <div className=\"board\">\n        <div className=\"game\">\n            {board.map((color, index) => ( //El board es un array de colores, por lo que le hacemos un map y podemos manejar cada color\n                <IonImg\n                    className=\"img\"\n                    key={index} \n                    src={color}\n                    alt={color}\n                    data-id={index}\n                    draggable={true} //Elemento puede ser arrastrado\n                    onDragStart={dragStart}\n                    /*\n                    event.preventDefault()\n                    Cancela el evento si este es cancelable, \n                    sin detener el resto del funcionamiento del evento, \n                    es decir, puede ser llamado de nuevo.\n                    */\n                    onDragOver = {(e) => e.preventDefault()}\n                    onDragEnter = {(e) => e.preventDefault()}\n                    onDragLeave = {(e) => e.preventDefault()}\n                    onDrop = {dragDrop} \n                    onDragEnd = {dragEnd}\n                ></IonImg>\n            ))}\n        </div>\n      </div> \n    );\n  };\n  \n  export default GameBoard;","import { scoreProps } from \"../interfaces/interfaces\";\nimport './ScoreBoard.css'\n\nconst ScoreBoard: React.FC<scoreProps> = ({score}) =>{\n    return(\n        <div>\n            <h2 className=\"ion-text-center\">Pokemon capturados: <b>{score}</b></h2>\n        </div>\n    )\n}\n\nexport default ScoreBoard;","export default __webpack_public_path__ + \"static/media/pikachu.cb81c8c0.png\";","export default __webpack_public_path__ + \"static/media/charmander.7f7b6865.png\";","export default __webpack_public_path__ + \"static/media/snorlax.e8675a98.png\";","export default __webpack_public_path__ + \"static/media/jigglypuff.35811ff1.png\";","export default __webpack_public_path__ + \"static/media/squirtle.d102e1b2.png\";","export default __webpack_public_path__ + \"static/media/eevee.ebf7d952.png\";","export default __webpack_public_path__ + \"static/media/pokeball.6c6b4cb9.png\";","import { IonCol, IonContent, IonGrid, IonHeader, IonPage, IonRow, IonTitle, IonToolbar } from '@ionic/react';\nimport { ItemColor, Panel } from '../interfaces/interfaces';\nimport { useState , useEffect} from 'react';\nimport './Game.css';\nimport GameBoard from '../components/GameBoard';\nimport ScoreBoard from '../components/ScoreBoard';\nimport pikachu from '../images/pikachu.png';\nimport charmander from '../images/charmander.png';\nimport snorlax from '../images/snorlax.png';\nimport jigglypuff from '../images/jigglypuff.png';\nimport squirtle from '../images/squirtle.png';\nimport eevee from '../images/eevee.png';\nimport pokeball from '../images/pokeball.png';\n\n\nconst myItemColors: ItemColor = {\n  color: [\n    squirtle, \n    charmander, \n    eevee, \n    jigglypuff, \n    snorlax, \n    pikachu]\n};\n\nconst myPanel: Panel = {\n  width: 8\n};\n\nconst Game: React.FC = () => {\n\n  const [currentColorArray, setCurrentColorArray] = useState<string[]>([]);\n  const [squareBeingDragged, setSquareBeingDragged] = useState<any>(null);\n  const [squareBeingReplaced, setSquareBeingReplaced] = useState<any>(null);\n  const [score, setScore] = useState<number>(0);\n\n  const checkColumOfFour = () =>{ \n    let maxToCheckColum: number = ((myPanel.width - 3) * myPanel.width - 1);\n    for(let i: number = 0; i <= maxToCheckColum; i++){\n      const columOfFour: number[] = [i, i + myPanel.width, i + myPanel.width * 2, i + myPanel.width * 3];\n      const selectedColor: string = currentColorArray[i];\n\n      if( columOfFour.every(square => currentColorArray[square] === selectedColor)){\n        columOfFour.forEach(square => currentColorArray[square] = pokeball);\n        if(selectedColor !== pokeball){\n          setScore((sc) => sc+4);\n          localStorage.setItem('score', (score + 4).toString());\n        }\n      }\n    }\n  }\n\n  const booleanCheckColumOfFour = () =>{\n    let maxToCheckColum: number = ((myPanel.width - 3) * myPanel.width - 1);\n    for(let i: number = 0; i <= maxToCheckColum; i++){\n      const columOfFour: number[] = [i, i + myPanel.width, i + myPanel.width * 2, i + myPanel.width * 3];\n      const selectedColor: string = currentColorArray[i];\n\n      if( columOfFour.every(square => currentColorArray[square] === selectedColor))\n        return true;\n    }\n  }\n  \n  const checkRowOfFour = () =>{\n    let notValid: number[] = [];\n    for(let i: number = myPanel.width - 1; i < myPanel.width * myPanel.width; i += myPanel.width){\n      notValid.push(i-2, i-1, i);\n    }\n\n    for(let i: number = 0; i < myPanel.width * myPanel.width; i++){\n      const rowOfFour: number[] = [i, i + 1, i + 2, i + 3];\n      const selectedColor: string = currentColorArray[i];\n\n      if(notValid.includes(i)) continue\n\n      if( rowOfFour.every(square => currentColorArray[square] === selectedColor)){\n        rowOfFour.forEach(square => currentColorArray[square] = pokeball);\n        if(selectedColor !== pokeball){\n          setScore((sc) => sc+4);\n          localStorage.setItem('score', (score + 4).toString());\n        }\n      }\n\n    }\n  }\n\n  const booleanCheckRowOfFour = () =>{\n    let notValid: number[] = [];\n    for(let i: number = myPanel.width - 1; i < myPanel.width * myPanel.width; i += myPanel.width){\n      notValid.push(i-2, i-1, i);\n    }\n\n    for(let i: number = 0; i < myPanel.width * myPanel.width; i++){\n      const rowOfFour: number[] = [i, i + 1, i + 2, i + 3];\n      const selectedColor: string = currentColorArray[i];\n\n      if(notValid.includes(i)) continue;\n\n      if( rowOfFour.every(square => currentColorArray[square] === selectedColor))\n        return true;\n    }\n  }\n\n  const checkColumOfThree = () =>{\n    /* \n    Calculamos el máximo de posiciones a comprobar en maxToCheckColum. \n    Si, por ejemplo, tenemos un tamaño de 8 x 8, \n    la última casilla a comprobar será la 47.\n    Si tenemos una tablero de 6 x 6 la última será la 23.\n    Si calculamos el tamaño de la columna - 2 (posiciones por debajo de la máxima casilla a comprobar)\n    esto lo multiplicamos por el tamaño de la columna y le restamos 1 (por empezar a contar en 0), \n    nos proporciona el máximo índice del array a comprobar.\n\n    Ej: 6 x 6\n\n     0  1  2  3  4  5 (1)\n     6  7  8  9 10 11 (2)\n    12 13 14 15 16 17 (3)\n    18 19 20 21 22 23 (4) X <- última casilla a comprobar ==> (6 - 2)*6 -1 = 23\n    24 25 26 27 28 29 (5) X\n    30 31 32 33 34 35 (6) X\n    */\n    let maxToCheckColum: number = ((myPanel.width - 2) * myPanel.width - 1)\n    for(let i: number = 0; i <= maxToCheckColum; i++){\n      const columOfThree: number[] = [i, i + myPanel.width, i + myPanel.width * 2];\n      const selectedColor: string = currentColorArray[i];\n      /* \n      Con la función every comprobamos que todas las posiciones que le\n      indicamos en el array cumplen cierta condición, en nuestro caso que\n      las 3 posiciones indicadas en columOfThree tengan el mismo color el\n      seleccionado actual.\n      Si se cumple cambiamos el nombre del color por pokeball\n      */\n      if( columOfThree.every(square => currentColorArray[square] === selectedColor)){\n        columOfThree.forEach(square => currentColorArray[square] = pokeball);\n        if(selectedColor !== pokeball){\n          setScore((sc) => sc+3);\n          localStorage.setItem('score', (score + 3).toString());\n        }\n          \n      }\n    }\n  }\n\n  const booleanCheckColumOfThree = () =>{\n    let maxToCheckColum: number = ((myPanel.width - 2) * myPanel.width - 1)\n    for(let i: number = 0; i <= maxToCheckColum; i++){\n      const columOfThree: number[] = [i, i + myPanel.width, i + myPanel.width * 2];\n      const selectedColor: string = currentColorArray[i];\n      /* \n      Con la función every comprobamos que todas las posiciones que le\n      indicamos en el array cumplen cierta condición, en nuestro caso que\n      las 3 posiciones indicadas en columOfThree tengan el mismo color el\n      seleccionado actual.\n      Si se cumple cambiamos el nombre del color por pokeball\n      */\n      if( columOfThree.every(square => currentColorArray[square] === selectedColor))\n        return true;\n    }\n  }\n\n  const checkRowOfThree = () =>{\n    /*\n    Ej: 6 x 6\n              X  X  X\n    (0)(1)(2)(3)(4)(5)\n     0  1  2  3  4  5\n     6  7  8  9 10 11\n    12 13 14 15 16 17\n    18 19 20 21 22 23\n    24 25 26 27 28 29\n    30 31 32 33 34 35\n\n    Las 2 última columnas no es necesario hacerles la comprobación\n    */\n    let notValid: number[] = [];\n\n    for(let i: number = myPanel.width - 1; i < myPanel.width * myPanel.width; i += myPanel.width){\n      notValid.push(i-1, i);\n    }\n\n    for(let i: number = 0; i < myPanel.width * myPanel.width; i++){\n      const rowOfThree: number[] = [i, i + 1, i + 2];\n      const selectedColor: string = currentColorArray[i];\n\n      if(notValid.includes(i)) continue; //Si el elemento por donde va está incluido en la lista de no válidos pasa al siguiente elemento\n\n      if( rowOfThree.every(square => currentColorArray[square] === selectedColor)){\n        rowOfThree.forEach(square => currentColorArray[square] = pokeball);\n        if(selectedColor !== pokeball){\n          setScore((sc) => sc+3);\n          localStorage.setItem('score', (score + 3).toString());\n        }\n          \n      }\n    }\n  }\n\n  const booleanCheckRowOfThree = () =>{\n    let notValid: number[] = [];\n\n    for(let i: number = myPanel.width - 1; i < myPanel.width * myPanel.width; i += myPanel.width){\n      notValid.push(i-1, i);\n    }\n\n    for(let i: number = 0; i < myPanel.width * myPanel.width; i++){\n      const rowOfThree: number[] = [i, i + 1, i + 2];\n      const selectedColor: string = currentColorArray[i];\n\n      if(notValid.includes(i)) continue; //Si el elemento por donde va está incluido en la lista de no válidos pasa al siguiente elemento\n\n      if( rowOfThree.every(square => currentColorArray[square] === selectedColor))\n        return true;\n    }\n  }\n\n  const moveIntoSquareBelow = () => {\n    /* \n    Evaluamos todos los elementos menos la última fila, ya que las fichas no pueden bajar más de eso.\n    Si se detecta que la fila de abajo está en blanco, bajamos el color de esa posición a la de abajo.\n    Además si detectamos que en la primera fila hay una ficha en blanco, generamos un color aleatorio,\n    de esta manera vamos a rellenar la tabla al 100% ya que al bajar todos los elementos hacia abajo las\n    fichas blancas van a quedar siempre arriba\n    */\n    let firstRow: number[] = [];\n    for(let i: number = 0; i < myPanel.width; i++){\n      firstRow.push(i);\n    }\n\n    for(let i: number = 0; i <= myPanel.width * myPanel.width - myPanel.width; i++){\n\n      const isFirstRow: boolean = firstRow.includes(i);\n      if(isFirstRow && currentColorArray[i] === pokeball){\n        let randomNumber: number = Math.floor(Math.random() * myItemColors.color.length);\n        currentColorArray[i] = myItemColors.color[randomNumber];\n      }\n\n      if((currentColorArray[i + myPanel.width]) === pokeball){\n        currentColorArray[i + myPanel.width] = currentColorArray[i];\n        currentColorArray[i] = pokeball;\n      }\n    }\n  }\n\n  const dragStart = (e: Event) =>{\n    setSquareBeingDragged(e.target);\n  }\n\n  const dragDrop = (e: Event) => {\n    setSquareBeingReplaced(e.target);\n  }\n\n  const dragEnd = (e: Event) =>{\n    const squareBeingDraggedId: number= parseInt(squareBeingDragged?.getAttribute('data-id'));\n    const squareBeingReplacedId: number = parseInt(squareBeingReplaced?.getAttribute('data-id'));\n\n    currentColorArray[squareBeingReplacedId] = squareBeingDragged?.getAttribute('src');\n    currentColorArray[squareBeingDraggedId] = squareBeingReplaced?.getAttribute('src');\n\n    const validPosition: number[] = [\n      squareBeingDraggedId - 1,\n      squareBeingDraggedId - myPanel.width,\n      squareBeingDraggedId + 1,\n      squareBeingDraggedId + myPanel.width\n    ]\n\n    const validMove: boolean = validPosition.includes(squareBeingReplacedId);\n    \n    const isColumOfFour: any = booleanCheckColumOfFour();\n    const isRowOfFour: any = booleanCheckRowOfFour();\n    const isColumOfThree: any = booleanCheckColumOfThree();\n    const isRowOfThree: any = booleanCheckRowOfThree();\n\n    if(squareBeingReplacedId !== NaN && \n      validMove && \n      (isColumOfFour || isRowOfFour || isColumOfThree || isRowOfThree)\n    ){\n      setSquareBeingDragged(null);\n      setSquareBeingReplaced(null);\n    }else{\n      currentColorArray[squareBeingReplacedId] = squareBeingReplaced?.getAttribute('src');\n      currentColorArray[squareBeingDraggedId] = squareBeingDragged?.getAttribute('src');\n      setCurrentColorArray([...currentColorArray]);\n    }\n\n  }\n\n  const createPanel = () => {\n    const randomColorArray: string[] = [];\n    for(let i = 0; i < myPanel.width * myPanel.width; i++){\n      const randomNumber0to5: number = Math.floor(Math.random() * myItemColors.color.length);\n      const randomColor: string = myItemColors.color[randomNumber0to5];\n      randomColorArray.push(randomColor);\n    }\n    setCurrentColorArray(randomColorArray);\n  }\n\n  useEffect(() => {\n    createPanel();\n  }, [myPanel.width])\n\n  useEffect(() => {\n    if(Number(localStorage.getItem('score')) > Number(localStorage.getItem('maxScore')))\n      localStorage.setItem('maxScore', score.toString());\n  }, [score])\n\n  useEffect(()=>{\n    const timer = setInterval(() => {\n      checkColumOfFour();\n      checkRowOfFour();\n      checkColumOfThree();\n      checkRowOfThree();\n      moveIntoSquareBelow();\n      setCurrentColorArray([...currentColorArray]);\n    }, 100)\n    return () => clearInterval(timer)\n  }, [checkColumOfFour, checkRowOfFour, checkColumOfThree, checkRowOfThree, moveIntoSquareBelow, currentColorArray])\n  \n  return (\n    <IonPage>\n      <IonHeader className=\"ion-no-border\">\n        <IonToolbar>\n          <IonTitle className=\"ion-text-center\">Pokemon Candy</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent fullscreen>\n        <GameBoard \n          board={currentColorArray}\n          dragStart={dragStart} \n          dragDrop={dragDrop} \n          dragEnd={dragEnd}\n        />\n\n        <ScoreBoard score={score}/>\n\n        <IonGrid fixed>\n          <IonRow className=\"credits\">\n            <IonCol size=\"12\">\n            <a \n              href=\"https://www.youtube.com/watch?v=PBrEq9Wd6_U\" \n              title=\"Inspiración\" \n              target=\"_blank\"\n            >\n              Código basado en el video de youtube 'Candy Crush in React' de <b>Ania Kubów</b>\n            </a>\n            </IonCol>\n            <IonCol size=\"12\">\n              <a href=\"https://www.flaticon.es/iconos-gratis/pokemon\"  title=\"Iconos Pokemon\" target=\"_blank\">Iconos Pokemon creados por <b>Roundicons Freebies</b></a>\n            </IonCol>\n            <IonCol size=\"12\">\n              <a href=\"https://www.flaticon.es/iconos-gratis/pokemon\" title=\"Icono pokeball\" target=\"_blank\">Icono Pokeball creado por <b>Those Icons</b></a>\n            </IonCol>\n          </IonRow>\n        </IonGrid>\n        \n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Game;","import { IonCol, IonGrid, IonRow, IonPage, IonHeader, IonTitle, IonToolbar, IonContent } from '@ionic/react';\nimport './Profile.css';\n\n\nconst Profile: React.FC = () => {\n\n    return(\n    <IonPage>\n      <IonHeader className=\"ion-no-border\">\n        <IonToolbar>\n          <IonTitle className=\"ion-text-center\">Perfil</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent fullscreen>\n        <IonGrid fixed>\n            <IonRow>\n                <IonCol size=\"12\" className=\"ion-text-center\">\n                    <h2>Máxima puntuación personal: <b>{localStorage.getItem('maxScore')}</b></h2>\n                </IonCol>\n            </IonRow>\n        </IonGrid>\n      </IonContent>\n    </IonPage>\n    );\n};\n\nexport default Profile;","import { Redirect, Route } from 'react-router-dom';\nimport {\n  IonApp,\n  IonIcon,\n  IonLabel,\n  IonRouterOutlet,\n  IonTabBar,\n  IonTabButton,\n  IonTabs,\n  setupIonicReact\n} from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\nimport { gameController, personCircleOutline } from 'ionicons/icons';\n\nimport Game from './pages/Game';\nimport Profile from './pages/Profile';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\nsetupIonicReact();\n\nconst App: React.FC = () => (\n  <IonApp>\n    <IonReactRouter>\n      <IonTabs>\n        <IonRouterOutlet>\n          <Route exact path=\"/reactCandyGame/game\">\n            <Game />\n          </Route>\n          <Route exact path=\"/reactCandyGame/profile\">\n            <Profile />\n          </Route>\n          <Route exact path=\"/\">\n            <Redirect to=\"/reactCandyGame/game\" />\n          </Route>\n          <Route exact path=\"/reactCandyGame\">\n            <Redirect to=\"/reactCandyGame/game\" />\n          </Route>\n        </IonRouterOutlet>\n\n        <IonTabBar slot=\"bottom\">\n          <IonTabButton tab=\"game\" href=\"/reactCandyGame/game\">\n            <IonIcon icon={gameController}/>\n            <IonLabel>Juego</IonLabel>\n          </IonTabButton>\n          <IonTabButton tab=\"profile\" href=\"/reactCandyGame/profile\" >\n            <IonIcon icon={personCircleOutline}/>\n            <IonLabel>Perfil</IonLabel>\n          </IonTabButton>\n        </IonTabBar>\n      </IonTabs>\n    </IonReactRouter>\n  </IonApp>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}